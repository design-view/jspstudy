package member;


import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletContext;
import javax.servlet.jsp.JspWriter;

import common.JDBCConnect;
import common.JSFunction;

public class MemberDAO extends JDBCConnect{
	public MemberDAO(ServletContext application) {
		super(application);
	}
	//게시글 목록 가져오기
	public List<MemberDTO> selectList(){
		//쿼리작성
		String sql = "select * from member";
		//리턴타입 변수생성 
		List<MemberDTO> memberlist = new ArrayList<MemberDTO>();
		try {
			//정적쿼리객체 생성 Statement타입 생성해서 stmt필드에 할당 
			//stmt필드는 JDBCConnect에서 선언됨 
			stmt = con.createStatement();
			//쿼리실행 executeQuery()메소드가 실행되면 ResultSet타입 리턴 
			rs = stmt.executeQuery(sql);
			//rs.next() 커서를 아래행으로 이동 boolean타입(true,false) 리턴 
			while(rs.next()){
				//DTO타입 객체 생성 
				MemberDTO member = new MemberDTO();
				member.setId(rs.getString("id"));
				member.setPass(rs.getString("pass"));
				member.setName(rs.getString("name"));
				member.setRegidate(rs.getDate("regidate"));
				memberlist.add(member);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return memberlist;						
	}
	//게시글 상세 조회하기
	public MemberDTO detailView(String id) {
		String query = "select * from member where id=?";
		MemberDTO member = new MemberDTO();
		try {
			psmt = con.prepareStatement(query);
			psmt.setString(1, id);
			rs = psmt.executeQuery();
			if(rs.next()) {
				member.setId(rs.getString("id"));
				member.setPass(rs.getString("pass"));
				member.setName(rs.getString("name"));
				member.setRegidate(rs.getDate("regidate"));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return member;
	}
	
	//게시글 삭제하기 
	public int deleteMember(String id) {
		String query = "delete from member where id='"+id+"'";
		int result = 0;
		try {
			stmt=con.createStatement();
			result = stmt.executeUpdate(query);
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return result;
		
	}
	//게시글 수정하기
	public int updateMember(String id, String pw, String name, String oldid) {
		int result = 0;
		String query = "update member set id=?, pass=?, name=? where id=?";
		try {
			psmt = con.prepareStatement(query);
			psmt.setString(1, id);
			psmt.setString(2, pw);
			psmt.setString(3, name);
			psmt.setString(4, oldid);
			result = psmt.executeUpdate();  //수정된 행의 갯수 리턴 
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return result;
	}
	//게시글 추가하기
	public int insertMember(String id, String pass, String name) {
		//쿼리문 작성
		String sql = "insert into member(id,pass,name) values(?,?,?)";
		int result = 0;
		//쿼리수행
		try{
			//connection객체를 통해서 preparedStatement객체를 생성 
			psmt = con.prepareStatement(sql);
			//인파라미터에 실제값을 대입
			psmt.setString(1,id);
			psmt.setString(2,pass);
			psmt.setString(3,name);
			result = psmt.executeUpdate();   //변경된행의 갯수를 리턴
		}
		catch(Exception e){

		}
		return result;
	}
	
}
